Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    BRACKET_CLOSE
    BRACKET_OPEN
    EQUAL
    GREATER
    GREATER_EQ
    HASH
    LESS
    LESS_EQ
    NOT_EQUAL
    UNINTEGER

Grammar

Rule 0     S' -> program
Rule 1     program -> operation
Rule 2     program -> program operation
Rule 3     operation -> expr end
Rule 4     operation -> assign end
Rule 5     operation -> fcall end
Rule 6     operation -> return end
Rule 7     operation -> end
Rule 8     expr -> limit
Rule 9     expr -> derivate
Rule 10    expr -> factorial
Rule 11    expr -> abs
Rule 12    abs -> OR expr OR
Rule 13    return -> RETURN expr
Rule 14    factorial -> expr FACTOR
Rule 15    derivate -> expr QUOTE
Rule 16    limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr
Rule 17    to -> id ARROW_RIGHT expr
Rule 18    expr -> fcall
Rule 19    fcall -> id PAREN_OPEN params PAREN_CLOSE
Rule 20    fcall -> id PAREN_OPEN PAREN_CLOSE
Rule 21    params -> expr
Rule 22    params -> params COMMA expr
Rule 23    assign -> fcall ASSIGN CURLY_OPEN program CURLY_CLOSE
Rule 24    assign -> id ASSIGN expr
Rule 25    assign -> fcall ASSIGN expr
Rule 26    expr -> expr PLUS expr
Rule 27    expr -> expr MINUS expr
Rule 28    expr -> expr MUL expr
Rule 29    expr -> expr DIV expr
Rule 30    expr -> expr EXPON expr
Rule 31    expr -> value
Rule 32    expr -> expr id
Rule 33    expr -> PAREN_OPEN expr PAREN_CLOSE
Rule 34    value -> MINUS value
Rule 35    value -> STRING
Rule 36    value -> id
Rule 37    value -> bool
Rule 38    id -> ID
Rule 39    bool -> TRUE
Rule 40    bool -> FALSE
Rule 41    value -> number
Rule 42    value -> float
Rule 43    number -> INTEGER
Rule 44    float -> INTEGER DOT INTEGER
Rule 45    end -> SEMICOLON
Rule 46    end -> NEWLINE

Terminals, with rules where they appear

ANGLE_CLOSE          : 16
ANGLE_OPEN           : 16
ARROW_RIGHT          : 17
ASSIGN               : 23 24 25
BRACKET_CLOSE        : 
BRACKET_OPEN         : 
COMMA                : 22
CURLY_CLOSE          : 23
CURLY_OPEN           : 23
DIV                  : 29
DOT                  : 44
EQUAL                : 
EXPON                : 30
FACTOR               : 14
FALSE                : 40
GREATER              : 
GREATER_EQ           : 
HASH                 : 
ID                   : 38
INTEGER              : 43 44 44
LESS                 : 
LESS_EQ              : 
LIM                  : 16
MINUS                : 27 34
MUL                  : 28
NEWLINE              : 46
NOT_EQUAL            : 
OR                   : 12 12
PAREN_CLOSE          : 19 20 33
PAREN_OPEN           : 19 20 33
PLUS                 : 26
QUOTE                : 15
RETURN               : 13
SEMICOLON            : 45
STRING               : 35
TRUE                 : 39
UNINTEGER            : 
error                : 

Nonterminals, with rules where they appear

abs                  : 11
assign               : 4
bool                 : 37
derivate             : 9
end                  : 3 4 5 6 7
expr                 : 3 12 13 14 15 16 17 21 22 24 25 26 26 27 27 28 28 29 29 30 30 32 33
factorial            : 10
fcall                : 5 18 23 25
float                : 42
id                   : 17 19 20 24 32 36
limit                : 8
number               : 41
operation            : 1 2
params               : 19 22
program              : 2 23 0
return               : 6
to                   : 16
value                : 31 34


state 0

    (0) S' -> . program
    (1) program -> . operation
    (2) program -> . program operation
    (3) operation -> . expr end
    (4) operation -> . assign end
    (5) operation -> . fcall end
    (6) operation -> . return end
    (7) operation -> . end
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (23) assign -> . fcall ASSIGN CURLY_OPEN program CURLY_CLOSE
    (24) assign -> . id ASSIGN expr
    (25) assign -> . fcall ASSIGN expr
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (13) return -> . RETURN expr
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    RETURN          shift and go to state 16
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    program                        shift and go to state 1
    operation                      shift and go to state 2
    expr                           shift and go to state 3
    end                            shift and go to state 4
    assign                         shift and go to state 5
    fcall                          shift and go to state 6
    return                         shift and go to state 7
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    value                          shift and go to state 13
    id                             shift and go to state 14
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 1

    (0) S' -> program .
    (2) program -> program . operation
    (3) operation -> . expr end
    (4) operation -> . assign end
    (5) operation -> . fcall end
    (6) operation -> . return end
    (7) operation -> . end
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (23) assign -> . fcall ASSIGN CURLY_OPEN program CURLY_CLOSE
    (24) assign -> . id ASSIGN expr
    (25) assign -> . fcall ASSIGN expr
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (13) return -> . RETURN expr
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    RETURN          shift and go to state 16
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    operation                      shift and go to state 29
    expr                           shift and go to state 3
    end                            shift and go to state 4
    assign                         shift and go to state 5
    fcall                          shift and go to state 6
    return                         shift and go to state 7
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    value                          shift and go to state 13
    id                             shift and go to state 14
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 2

    (1) program -> operation .

    PAREN_OPEN      reduce using rule 1 (program -> operation .)
    RETURN          reduce using rule 1 (program -> operation .)
    SEMICOLON       reduce using rule 1 (program -> operation .)
    NEWLINE         reduce using rule 1 (program -> operation .)
    LIM             reduce using rule 1 (program -> operation .)
    OR              reduce using rule 1 (program -> operation .)
    MINUS           reduce using rule 1 (program -> operation .)
    STRING          reduce using rule 1 (program -> operation .)
    ID              reduce using rule 1 (program -> operation .)
    TRUE            reduce using rule 1 (program -> operation .)
    FALSE           reduce using rule 1 (program -> operation .)
    INTEGER         reduce using rule 1 (program -> operation .)
    $end            reduce using rule 1 (program -> operation .)
    CURLY_CLOSE     reduce using rule 1 (program -> operation .)


state 3

    (3) operation -> expr . end
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE
    (38) id -> . ID

    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18
    ID              shift and go to state 25

    end                            shift and go to state 30
    id                             shift and go to state 36

state 4

    (7) operation -> end .

    PAREN_OPEN      reduce using rule 7 (operation -> end .)
    RETURN          reduce using rule 7 (operation -> end .)
    SEMICOLON       reduce using rule 7 (operation -> end .)
    NEWLINE         reduce using rule 7 (operation -> end .)
    LIM             reduce using rule 7 (operation -> end .)
    OR              reduce using rule 7 (operation -> end .)
    MINUS           reduce using rule 7 (operation -> end .)
    STRING          reduce using rule 7 (operation -> end .)
    ID              reduce using rule 7 (operation -> end .)
    TRUE            reduce using rule 7 (operation -> end .)
    FALSE           reduce using rule 7 (operation -> end .)
    INTEGER         reduce using rule 7 (operation -> end .)
    $end            reduce using rule 7 (operation -> end .)
    CURLY_CLOSE     reduce using rule 7 (operation -> end .)


state 5

    (4) operation -> assign . end
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE

    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18

    end                            shift and go to state 39

state 6

    (5) operation -> fcall . end
    (18) expr -> fcall .
    (23) assign -> fcall . ASSIGN CURLY_OPEN program CURLY_CLOSE
    (25) assign -> fcall . ASSIGN expr
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    PLUS            reduce using rule 18 (expr -> fcall .)
    MINUS           reduce using rule 18 (expr -> fcall .)
    MUL             reduce using rule 18 (expr -> fcall .)
    DIV             reduce using rule 18 (expr -> fcall .)
    EXPON           reduce using rule 18 (expr -> fcall .)
    QUOTE           reduce using rule 18 (expr -> fcall .)
    FACTOR          reduce using rule 18 (expr -> fcall .)
    ID              reduce using rule 18 (expr -> fcall .)
    ASSIGN          shift and go to state 41
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18

  ! SEMICOLON       [ reduce using rule 18 (expr -> fcall .) ]
  ! NEWLINE         [ reduce using rule 18 (expr -> fcall .) ]

    end                            shift and go to state 40

state 7

    (6) operation -> return . end
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE

    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18

    end                            shift and go to state 42

state 8

    (8) expr -> limit .

    PLUS            reduce using rule 8 (expr -> limit .)
    MINUS           reduce using rule 8 (expr -> limit .)
    MUL             reduce using rule 8 (expr -> limit .)
    DIV             reduce using rule 8 (expr -> limit .)
    EXPON           reduce using rule 8 (expr -> limit .)
    QUOTE           reduce using rule 8 (expr -> limit .)
    FACTOR          reduce using rule 8 (expr -> limit .)
    SEMICOLON       reduce using rule 8 (expr -> limit .)
    NEWLINE         reduce using rule 8 (expr -> limit .)
    ID              reduce using rule 8 (expr -> limit .)
    PAREN_CLOSE     reduce using rule 8 (expr -> limit .)
    OR              reduce using rule 8 (expr -> limit .)
    COMMA           reduce using rule 8 (expr -> limit .)
    ANGLE_CLOSE     reduce using rule 8 (expr -> limit .)


state 9

    (9) expr -> derivate .

    PLUS            reduce using rule 9 (expr -> derivate .)
    MINUS           reduce using rule 9 (expr -> derivate .)
    MUL             reduce using rule 9 (expr -> derivate .)
    DIV             reduce using rule 9 (expr -> derivate .)
    EXPON           reduce using rule 9 (expr -> derivate .)
    QUOTE           reduce using rule 9 (expr -> derivate .)
    FACTOR          reduce using rule 9 (expr -> derivate .)
    SEMICOLON       reduce using rule 9 (expr -> derivate .)
    NEWLINE         reduce using rule 9 (expr -> derivate .)
    ID              reduce using rule 9 (expr -> derivate .)
    PAREN_CLOSE     reduce using rule 9 (expr -> derivate .)
    OR              reduce using rule 9 (expr -> derivate .)
    COMMA           reduce using rule 9 (expr -> derivate .)
    ANGLE_CLOSE     reduce using rule 9 (expr -> derivate .)


state 10

    (10) expr -> factorial .

    PLUS            reduce using rule 10 (expr -> factorial .)
    MINUS           reduce using rule 10 (expr -> factorial .)
    MUL             reduce using rule 10 (expr -> factorial .)
    DIV             reduce using rule 10 (expr -> factorial .)
    EXPON           reduce using rule 10 (expr -> factorial .)
    QUOTE           reduce using rule 10 (expr -> factorial .)
    FACTOR          reduce using rule 10 (expr -> factorial .)
    SEMICOLON       reduce using rule 10 (expr -> factorial .)
    NEWLINE         reduce using rule 10 (expr -> factorial .)
    ID              reduce using rule 10 (expr -> factorial .)
    PAREN_CLOSE     reduce using rule 10 (expr -> factorial .)
    OR              reduce using rule 10 (expr -> factorial .)
    COMMA           reduce using rule 10 (expr -> factorial .)
    ANGLE_CLOSE     reduce using rule 10 (expr -> factorial .)


state 11

    (11) expr -> abs .

    PLUS            reduce using rule 11 (expr -> abs .)
    MINUS           reduce using rule 11 (expr -> abs .)
    MUL             reduce using rule 11 (expr -> abs .)
    DIV             reduce using rule 11 (expr -> abs .)
    EXPON           reduce using rule 11 (expr -> abs .)
    QUOTE           reduce using rule 11 (expr -> abs .)
    FACTOR          reduce using rule 11 (expr -> abs .)
    SEMICOLON       reduce using rule 11 (expr -> abs .)
    NEWLINE         reduce using rule 11 (expr -> abs .)
    ID              reduce using rule 11 (expr -> abs .)
    PAREN_CLOSE     reduce using rule 11 (expr -> abs .)
    OR              reduce using rule 11 (expr -> abs .)
    COMMA           reduce using rule 11 (expr -> abs .)
    ANGLE_CLOSE     reduce using rule 11 (expr -> abs .)


state 12

    (34) value -> MINUS . value
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    value                          shift and go to state 43
    id                             shift and go to state 44
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 13

    (31) expr -> value .

    PLUS            reduce using rule 31 (expr -> value .)
    MINUS           reduce using rule 31 (expr -> value .)
    MUL             reduce using rule 31 (expr -> value .)
    DIV             reduce using rule 31 (expr -> value .)
    EXPON           reduce using rule 31 (expr -> value .)
    QUOTE           reduce using rule 31 (expr -> value .)
    FACTOR          reduce using rule 31 (expr -> value .)
    SEMICOLON       reduce using rule 31 (expr -> value .)
    NEWLINE         reduce using rule 31 (expr -> value .)
    ID              reduce using rule 31 (expr -> value .)
    PAREN_CLOSE     reduce using rule 31 (expr -> value .)
    OR              reduce using rule 31 (expr -> value .)
    COMMA           reduce using rule 31 (expr -> value .)
    ANGLE_CLOSE     reduce using rule 31 (expr -> value .)


state 14

    (24) assign -> id . ASSIGN expr
    (19) fcall -> id . PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> id . PAREN_OPEN PAREN_CLOSE
    (36) value -> id .

    ASSIGN          shift and go to state 45
    PAREN_OPEN      shift and go to state 46
    PLUS            reduce using rule 36 (value -> id .)
    MINUS           reduce using rule 36 (value -> id .)
    MUL             reduce using rule 36 (value -> id .)
    DIV             reduce using rule 36 (value -> id .)
    EXPON           reduce using rule 36 (value -> id .)
    QUOTE           reduce using rule 36 (value -> id .)
    FACTOR          reduce using rule 36 (value -> id .)
    SEMICOLON       reduce using rule 36 (value -> id .)
    NEWLINE         reduce using rule 36 (value -> id .)
    ID              reduce using rule 36 (value -> id .)


state 15

    (33) expr -> PAREN_OPEN . expr PAREN_CLOSE
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 47
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 16

    (13) return -> RETURN . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 50
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 17

    (45) end -> SEMICOLON .

    PAREN_OPEN      reduce using rule 45 (end -> SEMICOLON .)
    RETURN          reduce using rule 45 (end -> SEMICOLON .)
    SEMICOLON       reduce using rule 45 (end -> SEMICOLON .)
    NEWLINE         reduce using rule 45 (end -> SEMICOLON .)
    LIM             reduce using rule 45 (end -> SEMICOLON .)
    OR              reduce using rule 45 (end -> SEMICOLON .)
    MINUS           reduce using rule 45 (end -> SEMICOLON .)
    STRING          reduce using rule 45 (end -> SEMICOLON .)
    ID              reduce using rule 45 (end -> SEMICOLON .)
    TRUE            reduce using rule 45 (end -> SEMICOLON .)
    FALSE           reduce using rule 45 (end -> SEMICOLON .)
    INTEGER         reduce using rule 45 (end -> SEMICOLON .)
    $end            reduce using rule 45 (end -> SEMICOLON .)
    CURLY_CLOSE     reduce using rule 45 (end -> SEMICOLON .)


state 18

    (46) end -> NEWLINE .

    PAREN_OPEN      reduce using rule 46 (end -> NEWLINE .)
    RETURN          reduce using rule 46 (end -> NEWLINE .)
    SEMICOLON       reduce using rule 46 (end -> NEWLINE .)
    NEWLINE         reduce using rule 46 (end -> NEWLINE .)
    LIM             reduce using rule 46 (end -> NEWLINE .)
    OR              reduce using rule 46 (end -> NEWLINE .)
    MINUS           reduce using rule 46 (end -> NEWLINE .)
    STRING          reduce using rule 46 (end -> NEWLINE .)
    ID              reduce using rule 46 (end -> NEWLINE .)
    TRUE            reduce using rule 46 (end -> NEWLINE .)
    FALSE           reduce using rule 46 (end -> NEWLINE .)
    INTEGER         reduce using rule 46 (end -> NEWLINE .)
    $end            reduce using rule 46 (end -> NEWLINE .)
    CURLY_CLOSE     reduce using rule 46 (end -> NEWLINE .)


state 19

    (16) limit -> LIM . ANGLE_OPEN to ANGLE_CLOSE expr

    ANGLE_OPEN      shift and go to state 51


state 20

    (12) abs -> OR . expr OR
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 52
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 21

    (35) value -> STRING .

    PLUS            reduce using rule 35 (value -> STRING .)
    MINUS           reduce using rule 35 (value -> STRING .)
    MUL             reduce using rule 35 (value -> STRING .)
    DIV             reduce using rule 35 (value -> STRING .)
    EXPON           reduce using rule 35 (value -> STRING .)
    QUOTE           reduce using rule 35 (value -> STRING .)
    FACTOR          reduce using rule 35 (value -> STRING .)
    SEMICOLON       reduce using rule 35 (value -> STRING .)
    NEWLINE         reduce using rule 35 (value -> STRING .)
    ID              reduce using rule 35 (value -> STRING .)
    PAREN_CLOSE     reduce using rule 35 (value -> STRING .)
    OR              reduce using rule 35 (value -> STRING .)
    COMMA           reduce using rule 35 (value -> STRING .)
    ANGLE_CLOSE     reduce using rule 35 (value -> STRING .)


state 22

    (37) value -> bool .

    PLUS            reduce using rule 37 (value -> bool .)
    MINUS           reduce using rule 37 (value -> bool .)
    MUL             reduce using rule 37 (value -> bool .)
    DIV             reduce using rule 37 (value -> bool .)
    EXPON           reduce using rule 37 (value -> bool .)
    QUOTE           reduce using rule 37 (value -> bool .)
    FACTOR          reduce using rule 37 (value -> bool .)
    SEMICOLON       reduce using rule 37 (value -> bool .)
    NEWLINE         reduce using rule 37 (value -> bool .)
    ID              reduce using rule 37 (value -> bool .)
    PAREN_CLOSE     reduce using rule 37 (value -> bool .)
    OR              reduce using rule 37 (value -> bool .)
    COMMA           reduce using rule 37 (value -> bool .)
    ANGLE_CLOSE     reduce using rule 37 (value -> bool .)


state 23

    (41) value -> number .

    PLUS            reduce using rule 41 (value -> number .)
    MINUS           reduce using rule 41 (value -> number .)
    MUL             reduce using rule 41 (value -> number .)
    DIV             reduce using rule 41 (value -> number .)
    EXPON           reduce using rule 41 (value -> number .)
    QUOTE           reduce using rule 41 (value -> number .)
    FACTOR          reduce using rule 41 (value -> number .)
    SEMICOLON       reduce using rule 41 (value -> number .)
    NEWLINE         reduce using rule 41 (value -> number .)
    ID              reduce using rule 41 (value -> number .)
    PAREN_CLOSE     reduce using rule 41 (value -> number .)
    OR              reduce using rule 41 (value -> number .)
    COMMA           reduce using rule 41 (value -> number .)
    ANGLE_CLOSE     reduce using rule 41 (value -> number .)


state 24

    (42) value -> float .

    PLUS            reduce using rule 42 (value -> float .)
    MINUS           reduce using rule 42 (value -> float .)
    MUL             reduce using rule 42 (value -> float .)
    DIV             reduce using rule 42 (value -> float .)
    EXPON           reduce using rule 42 (value -> float .)
    QUOTE           reduce using rule 42 (value -> float .)
    FACTOR          reduce using rule 42 (value -> float .)
    SEMICOLON       reduce using rule 42 (value -> float .)
    NEWLINE         reduce using rule 42 (value -> float .)
    ID              reduce using rule 42 (value -> float .)
    PAREN_CLOSE     reduce using rule 42 (value -> float .)
    OR              reduce using rule 42 (value -> float .)
    COMMA           reduce using rule 42 (value -> float .)
    ANGLE_CLOSE     reduce using rule 42 (value -> float .)


state 25

    (38) id -> ID .

    ASSIGN          reduce using rule 38 (id -> ID .)
    PAREN_OPEN      reduce using rule 38 (id -> ID .)
    PLUS            reduce using rule 38 (id -> ID .)
    MINUS           reduce using rule 38 (id -> ID .)
    MUL             reduce using rule 38 (id -> ID .)
    DIV             reduce using rule 38 (id -> ID .)
    EXPON           reduce using rule 38 (id -> ID .)
    QUOTE           reduce using rule 38 (id -> ID .)
    FACTOR          reduce using rule 38 (id -> ID .)
    SEMICOLON       reduce using rule 38 (id -> ID .)
    NEWLINE         reduce using rule 38 (id -> ID .)
    ID              reduce using rule 38 (id -> ID .)
    PAREN_CLOSE     reduce using rule 38 (id -> ID .)
    OR              reduce using rule 38 (id -> ID .)
    COMMA           reduce using rule 38 (id -> ID .)
    ANGLE_CLOSE     reduce using rule 38 (id -> ID .)
    ARROW_RIGHT     reduce using rule 38 (id -> ID .)


state 26

    (39) bool -> TRUE .

    PLUS            reduce using rule 39 (bool -> TRUE .)
    MINUS           reduce using rule 39 (bool -> TRUE .)
    MUL             reduce using rule 39 (bool -> TRUE .)
    DIV             reduce using rule 39 (bool -> TRUE .)
    EXPON           reduce using rule 39 (bool -> TRUE .)
    QUOTE           reduce using rule 39 (bool -> TRUE .)
    FACTOR          reduce using rule 39 (bool -> TRUE .)
    SEMICOLON       reduce using rule 39 (bool -> TRUE .)
    NEWLINE         reduce using rule 39 (bool -> TRUE .)
    ID              reduce using rule 39 (bool -> TRUE .)
    PAREN_CLOSE     reduce using rule 39 (bool -> TRUE .)
    OR              reduce using rule 39 (bool -> TRUE .)
    COMMA           reduce using rule 39 (bool -> TRUE .)
    ANGLE_CLOSE     reduce using rule 39 (bool -> TRUE .)


state 27

    (40) bool -> FALSE .

    PLUS            reduce using rule 40 (bool -> FALSE .)
    MINUS           reduce using rule 40 (bool -> FALSE .)
    MUL             reduce using rule 40 (bool -> FALSE .)
    DIV             reduce using rule 40 (bool -> FALSE .)
    EXPON           reduce using rule 40 (bool -> FALSE .)
    QUOTE           reduce using rule 40 (bool -> FALSE .)
    FACTOR          reduce using rule 40 (bool -> FALSE .)
    SEMICOLON       reduce using rule 40 (bool -> FALSE .)
    NEWLINE         reduce using rule 40 (bool -> FALSE .)
    ID              reduce using rule 40 (bool -> FALSE .)
    PAREN_CLOSE     reduce using rule 40 (bool -> FALSE .)
    OR              reduce using rule 40 (bool -> FALSE .)
    COMMA           reduce using rule 40 (bool -> FALSE .)
    ANGLE_CLOSE     reduce using rule 40 (bool -> FALSE .)


state 28

    (43) number -> INTEGER .
    (44) float -> INTEGER . DOT INTEGER

    PLUS            reduce using rule 43 (number -> INTEGER .)
    MINUS           reduce using rule 43 (number -> INTEGER .)
    MUL             reduce using rule 43 (number -> INTEGER .)
    DIV             reduce using rule 43 (number -> INTEGER .)
    EXPON           reduce using rule 43 (number -> INTEGER .)
    QUOTE           reduce using rule 43 (number -> INTEGER .)
    FACTOR          reduce using rule 43 (number -> INTEGER .)
    SEMICOLON       reduce using rule 43 (number -> INTEGER .)
    NEWLINE         reduce using rule 43 (number -> INTEGER .)
    ID              reduce using rule 43 (number -> INTEGER .)
    PAREN_CLOSE     reduce using rule 43 (number -> INTEGER .)
    OR              reduce using rule 43 (number -> INTEGER .)
    COMMA           reduce using rule 43 (number -> INTEGER .)
    ANGLE_CLOSE     reduce using rule 43 (number -> INTEGER .)
    DOT             shift and go to state 53


state 29

    (2) program -> program operation .

    PAREN_OPEN      reduce using rule 2 (program -> program operation .)
    RETURN          reduce using rule 2 (program -> program operation .)
    SEMICOLON       reduce using rule 2 (program -> program operation .)
    NEWLINE         reduce using rule 2 (program -> program operation .)
    LIM             reduce using rule 2 (program -> program operation .)
    OR              reduce using rule 2 (program -> program operation .)
    MINUS           reduce using rule 2 (program -> program operation .)
    STRING          reduce using rule 2 (program -> program operation .)
    ID              reduce using rule 2 (program -> program operation .)
    TRUE            reduce using rule 2 (program -> program operation .)
    FALSE           reduce using rule 2 (program -> program operation .)
    INTEGER         reduce using rule 2 (program -> program operation .)
    $end            reduce using rule 2 (program -> program operation .)
    CURLY_CLOSE     reduce using rule 2 (program -> program operation .)


state 30

    (3) operation -> expr end .

    PAREN_OPEN      reduce using rule 3 (operation -> expr end .)
    RETURN          reduce using rule 3 (operation -> expr end .)
    SEMICOLON       reduce using rule 3 (operation -> expr end .)
    NEWLINE         reduce using rule 3 (operation -> expr end .)
    LIM             reduce using rule 3 (operation -> expr end .)
    OR              reduce using rule 3 (operation -> expr end .)
    MINUS           reduce using rule 3 (operation -> expr end .)
    STRING          reduce using rule 3 (operation -> expr end .)
    ID              reduce using rule 3 (operation -> expr end .)
    TRUE            reduce using rule 3 (operation -> expr end .)
    FALSE           reduce using rule 3 (operation -> expr end .)
    INTEGER         reduce using rule 3 (operation -> expr end .)
    $end            reduce using rule 3 (operation -> expr end .)
    CURLY_CLOSE     reduce using rule 3 (operation -> expr end .)


state 31

    (26) expr -> expr PLUS . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 54
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 32

    (27) expr -> expr MINUS . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 55
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 33

    (28) expr -> expr MUL . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 56
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 34

    (29) expr -> expr DIV . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 57
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 35

    (30) expr -> expr EXPON . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 58
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 36

    (32) expr -> expr id .

    PLUS            reduce using rule 32 (expr -> expr id .)
    MINUS           reduce using rule 32 (expr -> expr id .)
    MUL             reduce using rule 32 (expr -> expr id .)
    DIV             reduce using rule 32 (expr -> expr id .)
    EXPON           reduce using rule 32 (expr -> expr id .)
    QUOTE           reduce using rule 32 (expr -> expr id .)
    FACTOR          reduce using rule 32 (expr -> expr id .)
    SEMICOLON       reduce using rule 32 (expr -> expr id .)
    NEWLINE         reduce using rule 32 (expr -> expr id .)
    ID              reduce using rule 32 (expr -> expr id .)
    PAREN_CLOSE     reduce using rule 32 (expr -> expr id .)
    OR              reduce using rule 32 (expr -> expr id .)
    COMMA           reduce using rule 32 (expr -> expr id .)
    ANGLE_CLOSE     reduce using rule 32 (expr -> expr id .)


state 37

    (15) derivate -> expr QUOTE .

    PLUS            reduce using rule 15 (derivate -> expr QUOTE .)
    MINUS           reduce using rule 15 (derivate -> expr QUOTE .)
    MUL             reduce using rule 15 (derivate -> expr QUOTE .)
    DIV             reduce using rule 15 (derivate -> expr QUOTE .)
    EXPON           reduce using rule 15 (derivate -> expr QUOTE .)
    QUOTE           reduce using rule 15 (derivate -> expr QUOTE .)
    FACTOR          reduce using rule 15 (derivate -> expr QUOTE .)
    SEMICOLON       reduce using rule 15 (derivate -> expr QUOTE .)
    NEWLINE         reduce using rule 15 (derivate -> expr QUOTE .)
    ID              reduce using rule 15 (derivate -> expr QUOTE .)
    PAREN_CLOSE     reduce using rule 15 (derivate -> expr QUOTE .)
    OR              reduce using rule 15 (derivate -> expr QUOTE .)
    COMMA           reduce using rule 15 (derivate -> expr QUOTE .)
    ANGLE_CLOSE     reduce using rule 15 (derivate -> expr QUOTE .)


state 38

    (14) factorial -> expr FACTOR .

    PLUS            reduce using rule 14 (factorial -> expr FACTOR .)
    MINUS           reduce using rule 14 (factorial -> expr FACTOR .)
    MUL             reduce using rule 14 (factorial -> expr FACTOR .)
    DIV             reduce using rule 14 (factorial -> expr FACTOR .)
    EXPON           reduce using rule 14 (factorial -> expr FACTOR .)
    QUOTE           reduce using rule 14 (factorial -> expr FACTOR .)
    FACTOR          reduce using rule 14 (factorial -> expr FACTOR .)
    SEMICOLON       reduce using rule 14 (factorial -> expr FACTOR .)
    NEWLINE         reduce using rule 14 (factorial -> expr FACTOR .)
    ID              reduce using rule 14 (factorial -> expr FACTOR .)
    PAREN_CLOSE     reduce using rule 14 (factorial -> expr FACTOR .)
    OR              reduce using rule 14 (factorial -> expr FACTOR .)
    COMMA           reduce using rule 14 (factorial -> expr FACTOR .)
    ANGLE_CLOSE     reduce using rule 14 (factorial -> expr FACTOR .)


state 39

    (4) operation -> assign end .

    PAREN_OPEN      reduce using rule 4 (operation -> assign end .)
    RETURN          reduce using rule 4 (operation -> assign end .)
    SEMICOLON       reduce using rule 4 (operation -> assign end .)
    NEWLINE         reduce using rule 4 (operation -> assign end .)
    LIM             reduce using rule 4 (operation -> assign end .)
    OR              reduce using rule 4 (operation -> assign end .)
    MINUS           reduce using rule 4 (operation -> assign end .)
    STRING          reduce using rule 4 (operation -> assign end .)
    ID              reduce using rule 4 (operation -> assign end .)
    TRUE            reduce using rule 4 (operation -> assign end .)
    FALSE           reduce using rule 4 (operation -> assign end .)
    INTEGER         reduce using rule 4 (operation -> assign end .)
    $end            reduce using rule 4 (operation -> assign end .)
    CURLY_CLOSE     reduce using rule 4 (operation -> assign end .)


state 40

    (5) operation -> fcall end .

    PAREN_OPEN      reduce using rule 5 (operation -> fcall end .)
    RETURN          reduce using rule 5 (operation -> fcall end .)
    SEMICOLON       reduce using rule 5 (operation -> fcall end .)
    NEWLINE         reduce using rule 5 (operation -> fcall end .)
    LIM             reduce using rule 5 (operation -> fcall end .)
    OR              reduce using rule 5 (operation -> fcall end .)
    MINUS           reduce using rule 5 (operation -> fcall end .)
    STRING          reduce using rule 5 (operation -> fcall end .)
    ID              reduce using rule 5 (operation -> fcall end .)
    TRUE            reduce using rule 5 (operation -> fcall end .)
    FALSE           reduce using rule 5 (operation -> fcall end .)
    INTEGER         reduce using rule 5 (operation -> fcall end .)
    $end            reduce using rule 5 (operation -> fcall end .)
    CURLY_CLOSE     reduce using rule 5 (operation -> fcall end .)


state 41

    (23) assign -> fcall ASSIGN . CURLY_OPEN program CURLY_CLOSE
    (25) assign -> fcall ASSIGN . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    CURLY_OPEN      shift and go to state 59
    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    fcall                          shift and go to state 48
    expr                           shift and go to state 60
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 42

    (6) operation -> return end .

    PAREN_OPEN      reduce using rule 6 (operation -> return end .)
    RETURN          reduce using rule 6 (operation -> return end .)
    SEMICOLON       reduce using rule 6 (operation -> return end .)
    NEWLINE         reduce using rule 6 (operation -> return end .)
    LIM             reduce using rule 6 (operation -> return end .)
    OR              reduce using rule 6 (operation -> return end .)
    MINUS           reduce using rule 6 (operation -> return end .)
    STRING          reduce using rule 6 (operation -> return end .)
    ID              reduce using rule 6 (operation -> return end .)
    TRUE            reduce using rule 6 (operation -> return end .)
    FALSE           reduce using rule 6 (operation -> return end .)
    INTEGER         reduce using rule 6 (operation -> return end .)
    $end            reduce using rule 6 (operation -> return end .)
    CURLY_CLOSE     reduce using rule 6 (operation -> return end .)


state 43

    (34) value -> MINUS value .

    PLUS            reduce using rule 34 (value -> MINUS value .)
    MINUS           reduce using rule 34 (value -> MINUS value .)
    MUL             reduce using rule 34 (value -> MINUS value .)
    DIV             reduce using rule 34 (value -> MINUS value .)
    EXPON           reduce using rule 34 (value -> MINUS value .)
    QUOTE           reduce using rule 34 (value -> MINUS value .)
    FACTOR          reduce using rule 34 (value -> MINUS value .)
    SEMICOLON       reduce using rule 34 (value -> MINUS value .)
    NEWLINE         reduce using rule 34 (value -> MINUS value .)
    ID              reduce using rule 34 (value -> MINUS value .)
    PAREN_CLOSE     reduce using rule 34 (value -> MINUS value .)
    OR              reduce using rule 34 (value -> MINUS value .)
    COMMA           reduce using rule 34 (value -> MINUS value .)
    ANGLE_CLOSE     reduce using rule 34 (value -> MINUS value .)


state 44

    (36) value -> id .

    PLUS            reduce using rule 36 (value -> id .)
    MINUS           reduce using rule 36 (value -> id .)
    MUL             reduce using rule 36 (value -> id .)
    DIV             reduce using rule 36 (value -> id .)
    EXPON           reduce using rule 36 (value -> id .)
    QUOTE           reduce using rule 36 (value -> id .)
    FACTOR          reduce using rule 36 (value -> id .)
    SEMICOLON       reduce using rule 36 (value -> id .)
    NEWLINE         reduce using rule 36 (value -> id .)
    ID              reduce using rule 36 (value -> id .)
    PAREN_CLOSE     reduce using rule 36 (value -> id .)
    OR              reduce using rule 36 (value -> id .)
    COMMA           reduce using rule 36 (value -> id .)
    ANGLE_CLOSE     reduce using rule 36 (value -> id .)


state 45

    (24) assign -> id ASSIGN . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    id                             shift and go to state 49
    expr                           shift and go to state 61
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 46

    (19) fcall -> id PAREN_OPEN . params PAREN_CLOSE
    (20) fcall -> id PAREN_OPEN . PAREN_CLOSE
    (21) params -> . expr
    (22) params -> . params COMMA expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_CLOSE     shift and go to state 63
    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    id                             shift and go to state 49
    params                         shift and go to state 62
    expr                           shift and go to state 64
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 47

    (33) expr -> PAREN_OPEN expr . PAREN_CLOSE
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PAREN_CLOSE     shift and go to state 65
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 48

    (18) expr -> fcall .

    PAREN_CLOSE     reduce using rule 18 (expr -> fcall .)
    PLUS            reduce using rule 18 (expr -> fcall .)
    MINUS           reduce using rule 18 (expr -> fcall .)
    MUL             reduce using rule 18 (expr -> fcall .)
    DIV             reduce using rule 18 (expr -> fcall .)
    EXPON           reduce using rule 18 (expr -> fcall .)
    QUOTE           reduce using rule 18 (expr -> fcall .)
    FACTOR          reduce using rule 18 (expr -> fcall .)
    ID              reduce using rule 18 (expr -> fcall .)
    SEMICOLON       reduce using rule 18 (expr -> fcall .)
    NEWLINE         reduce using rule 18 (expr -> fcall .)
    OR              reduce using rule 18 (expr -> fcall .)
    COMMA           reduce using rule 18 (expr -> fcall .)
    ANGLE_CLOSE     reduce using rule 18 (expr -> fcall .)


state 49

    (19) fcall -> id . PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> id . PAREN_OPEN PAREN_CLOSE
    (36) value -> id .

    PAREN_OPEN      shift and go to state 46
    PAREN_CLOSE     reduce using rule 36 (value -> id .)
    PLUS            reduce using rule 36 (value -> id .)
    MINUS           reduce using rule 36 (value -> id .)
    MUL             reduce using rule 36 (value -> id .)
    DIV             reduce using rule 36 (value -> id .)
    EXPON           reduce using rule 36 (value -> id .)
    QUOTE           reduce using rule 36 (value -> id .)
    FACTOR          reduce using rule 36 (value -> id .)
    ID              reduce using rule 36 (value -> id .)
    SEMICOLON       reduce using rule 36 (value -> id .)
    NEWLINE         reduce using rule 36 (value -> id .)
    OR              reduce using rule 36 (value -> id .)
    COMMA           reduce using rule 36 (value -> id .)
    ANGLE_CLOSE     reduce using rule 36 (value -> id .)


state 50

    (13) return -> RETURN expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    SEMICOLON       reduce using rule 13 (return -> RETURN expr .)
    NEWLINE         reduce using rule 13 (return -> RETURN expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 51

    (16) limit -> LIM ANGLE_OPEN . to ANGLE_CLOSE expr
    (17) to -> . id ARROW_RIGHT expr
    (38) id -> . ID

    ID              shift and go to state 25

    to                             shift and go to state 66
    id                             shift and go to state 67

state 52

    (12) abs -> OR expr . OR
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    OR              shift and go to state 68
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 53

    (44) float -> INTEGER DOT . INTEGER

    INTEGER         shift and go to state 69


state 54

    (26) expr -> expr PLUS expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PLUS            reduce using rule 26 (expr -> expr PLUS expr .)
    QUOTE           reduce using rule 26 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 26 (expr -> expr PLUS expr .)
    NEWLINE         reduce using rule 26 (expr -> expr PLUS expr .)
    ID              reduce using rule 26 (expr -> expr PLUS expr .)
    PAREN_CLOSE     reduce using rule 26 (expr -> expr PLUS expr .)
    OR              reduce using rule 26 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 26 (expr -> expr PLUS expr .)
    ANGLE_CLOSE     reduce using rule 26 (expr -> expr PLUS expr .)
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    FACTOR          shift and go to state 38

  ! MINUS           [ reduce using rule 26 (expr -> expr PLUS expr .) ]
  ! MUL             [ reduce using rule 26 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 26 (expr -> expr PLUS expr .) ]
  ! EXPON           [ reduce using rule 26 (expr -> expr PLUS expr .) ]
  ! FACTOR          [ reduce using rule 26 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! QUOTE           [ shift and go to state 37 ]
  ! ID              [ shift and go to state 25 ]

    id                             shift and go to state 36

state 55

    (27) expr -> expr MINUS expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PLUS            reduce using rule 27 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 27 (expr -> expr MINUS expr .)
    QUOTE           reduce using rule 27 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 27 (expr -> expr MINUS expr .)
    NEWLINE         reduce using rule 27 (expr -> expr MINUS expr .)
    ID              reduce using rule 27 (expr -> expr MINUS expr .)
    PAREN_CLOSE     reduce using rule 27 (expr -> expr MINUS expr .)
    OR              reduce using rule 27 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 27 (expr -> expr MINUS expr .)
    ANGLE_CLOSE     reduce using rule 27 (expr -> expr MINUS expr .)
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    FACTOR          shift and go to state 38

  ! MUL             [ reduce using rule 27 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 27 (expr -> expr MINUS expr .) ]
  ! EXPON           [ reduce using rule 27 (expr -> expr MINUS expr .) ]
  ! FACTOR          [ reduce using rule 27 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! QUOTE           [ shift and go to state 37 ]
  ! ID              [ shift and go to state 25 ]

    id                             shift and go to state 36

state 56

    (28) expr -> expr MUL expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PLUS            reduce using rule 28 (expr -> expr MUL expr .)
    MINUS           reduce using rule 28 (expr -> expr MUL expr .)
    MUL             reduce using rule 28 (expr -> expr MUL expr .)
    QUOTE           reduce using rule 28 (expr -> expr MUL expr .)
    SEMICOLON       reduce using rule 28 (expr -> expr MUL expr .)
    NEWLINE         reduce using rule 28 (expr -> expr MUL expr .)
    ID              reduce using rule 28 (expr -> expr MUL expr .)
    PAREN_CLOSE     reduce using rule 28 (expr -> expr MUL expr .)
    OR              reduce using rule 28 (expr -> expr MUL expr .)
    COMMA           reduce using rule 28 (expr -> expr MUL expr .)
    ANGLE_CLOSE     reduce using rule 28 (expr -> expr MUL expr .)
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    FACTOR          shift and go to state 38

  ! DIV             [ reduce using rule 28 (expr -> expr MUL expr .) ]
  ! EXPON           [ reduce using rule 28 (expr -> expr MUL expr .) ]
  ! FACTOR          [ reduce using rule 28 (expr -> expr MUL expr .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! MUL             [ shift and go to state 33 ]
  ! QUOTE           [ shift and go to state 37 ]
  ! ID              [ shift and go to state 25 ]

    id                             shift and go to state 36

state 57

    (29) expr -> expr DIV expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PLUS            reduce using rule 29 (expr -> expr DIV expr .)
    MINUS           reduce using rule 29 (expr -> expr DIV expr .)
    MUL             reduce using rule 29 (expr -> expr DIV expr .)
    DIV             reduce using rule 29 (expr -> expr DIV expr .)
    QUOTE           reduce using rule 29 (expr -> expr DIV expr .)
    SEMICOLON       reduce using rule 29 (expr -> expr DIV expr .)
    NEWLINE         reduce using rule 29 (expr -> expr DIV expr .)
    ID              reduce using rule 29 (expr -> expr DIV expr .)
    PAREN_CLOSE     reduce using rule 29 (expr -> expr DIV expr .)
    OR              reduce using rule 29 (expr -> expr DIV expr .)
    COMMA           reduce using rule 29 (expr -> expr DIV expr .)
    ANGLE_CLOSE     reduce using rule 29 (expr -> expr DIV expr .)
    EXPON           shift and go to state 35
    FACTOR          shift and go to state 38

  ! EXPON           [ reduce using rule 29 (expr -> expr DIV expr .) ]
  ! FACTOR          [ reduce using rule 29 (expr -> expr DIV expr .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! MUL             [ shift and go to state 33 ]
  ! DIV             [ shift and go to state 34 ]
  ! QUOTE           [ shift and go to state 37 ]
  ! ID              [ shift and go to state 25 ]

    id                             shift and go to state 36

state 58

    (30) expr -> expr EXPON expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PLUS            reduce using rule 30 (expr -> expr EXPON expr .)
    MINUS           reduce using rule 30 (expr -> expr EXPON expr .)
    MUL             reduce using rule 30 (expr -> expr EXPON expr .)
    DIV             reduce using rule 30 (expr -> expr EXPON expr .)
    EXPON           reduce using rule 30 (expr -> expr EXPON expr .)
    QUOTE           reduce using rule 30 (expr -> expr EXPON expr .)
    SEMICOLON       reduce using rule 30 (expr -> expr EXPON expr .)
    NEWLINE         reduce using rule 30 (expr -> expr EXPON expr .)
    ID              reduce using rule 30 (expr -> expr EXPON expr .)
    PAREN_CLOSE     reduce using rule 30 (expr -> expr EXPON expr .)
    OR              reduce using rule 30 (expr -> expr EXPON expr .)
    COMMA           reduce using rule 30 (expr -> expr EXPON expr .)
    ANGLE_CLOSE     reduce using rule 30 (expr -> expr EXPON expr .)
    FACTOR          shift and go to state 38

  ! FACTOR          [ reduce using rule 30 (expr -> expr EXPON expr .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! MUL             [ shift and go to state 33 ]
  ! DIV             [ shift and go to state 34 ]
  ! EXPON           [ shift and go to state 35 ]
  ! QUOTE           [ shift and go to state 37 ]
  ! ID              [ shift and go to state 25 ]

    id                             shift and go to state 36

state 59

    (23) assign -> fcall ASSIGN CURLY_OPEN . program CURLY_CLOSE
    (1) program -> . operation
    (2) program -> . program operation
    (3) operation -> . expr end
    (4) operation -> . assign end
    (5) operation -> . fcall end
    (6) operation -> . return end
    (7) operation -> . end
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (23) assign -> . fcall ASSIGN CURLY_OPEN program CURLY_CLOSE
    (24) assign -> . id ASSIGN expr
    (25) assign -> . fcall ASSIGN expr
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (13) return -> . RETURN expr
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    RETURN          shift and go to state 16
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    fcall                          shift and go to state 6
    program                        shift and go to state 70
    operation                      shift and go to state 2
    expr                           shift and go to state 3
    end                            shift and go to state 4
    assign                         shift and go to state 5
    return                         shift and go to state 7
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    value                          shift and go to state 13
    id                             shift and go to state 14
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 60

    (25) assign -> fcall ASSIGN expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    SEMICOLON       reduce using rule 25 (assign -> fcall ASSIGN expr .)
    NEWLINE         reduce using rule 25 (assign -> fcall ASSIGN expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 61

    (24) assign -> id ASSIGN expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    SEMICOLON       reduce using rule 24 (assign -> id ASSIGN expr .)
    NEWLINE         reduce using rule 24 (assign -> id ASSIGN expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 62

    (19) fcall -> id PAREN_OPEN params . PAREN_CLOSE
    (22) params -> params . COMMA expr

    PAREN_CLOSE     shift and go to state 71
    COMMA           shift and go to state 72


state 63

    (20) fcall -> id PAREN_OPEN PAREN_CLOSE .

    ASSIGN          reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    SEMICOLON       reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    NEWLINE         reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    PLUS            reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    MINUS           reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    MUL             reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    DIV             reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    EXPON           reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    QUOTE           reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    FACTOR          reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    ID              reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    PAREN_CLOSE     reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    OR              reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    COMMA           reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)
    ANGLE_CLOSE     reduce using rule 20 (fcall -> id PAREN_OPEN PAREN_CLOSE .)


state 64

    (21) params -> expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PAREN_CLOSE     reduce using rule 21 (params -> expr .)
    COMMA           reduce using rule 21 (params -> expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 65

    (33) expr -> PAREN_OPEN expr PAREN_CLOSE .

    PLUS            reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    MINUS           reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    MUL             reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    DIV             reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    EXPON           reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    QUOTE           reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    FACTOR          reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    SEMICOLON       reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    NEWLINE         reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    ID              reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    PAREN_CLOSE     reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    OR              reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    COMMA           reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)
    ANGLE_CLOSE     reduce using rule 33 (expr -> PAREN_OPEN expr PAREN_CLOSE .)


state 66

    (16) limit -> LIM ANGLE_OPEN to . ANGLE_CLOSE expr

    ANGLE_CLOSE     shift and go to state 73


state 67

    (17) to -> id . ARROW_RIGHT expr

    ARROW_RIGHT     shift and go to state 74


state 68

    (12) abs -> OR expr OR .

    PLUS            reduce using rule 12 (abs -> OR expr OR .)
    MINUS           reduce using rule 12 (abs -> OR expr OR .)
    MUL             reduce using rule 12 (abs -> OR expr OR .)
    DIV             reduce using rule 12 (abs -> OR expr OR .)
    EXPON           reduce using rule 12 (abs -> OR expr OR .)
    QUOTE           reduce using rule 12 (abs -> OR expr OR .)
    FACTOR          reduce using rule 12 (abs -> OR expr OR .)
    SEMICOLON       reduce using rule 12 (abs -> OR expr OR .)
    NEWLINE         reduce using rule 12 (abs -> OR expr OR .)
    ID              reduce using rule 12 (abs -> OR expr OR .)
    PAREN_CLOSE     reduce using rule 12 (abs -> OR expr OR .)
    OR              reduce using rule 12 (abs -> OR expr OR .)
    COMMA           reduce using rule 12 (abs -> OR expr OR .)
    ANGLE_CLOSE     reduce using rule 12 (abs -> OR expr OR .)


state 69

    (44) float -> INTEGER DOT INTEGER .

    PLUS            reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    MINUS           reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    MUL             reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    DIV             reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    EXPON           reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    QUOTE           reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    FACTOR          reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    SEMICOLON       reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    NEWLINE         reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    ID              reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    PAREN_CLOSE     reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    OR              reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    COMMA           reduce using rule 44 (float -> INTEGER DOT INTEGER .)
    ANGLE_CLOSE     reduce using rule 44 (float -> INTEGER DOT INTEGER .)


state 70

    (23) assign -> fcall ASSIGN CURLY_OPEN program . CURLY_CLOSE
    (2) program -> program . operation
    (3) operation -> . expr end
    (4) operation -> . assign end
    (5) operation -> . fcall end
    (6) operation -> . return end
    (7) operation -> . end
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (23) assign -> . fcall ASSIGN CURLY_OPEN program CURLY_CLOSE
    (24) assign -> . id ASSIGN expr
    (25) assign -> . fcall ASSIGN expr
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (13) return -> . RETURN expr
    (45) end -> . SEMICOLON
    (46) end -> . NEWLINE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    CURLY_CLOSE     shift and go to state 75
    PAREN_OPEN      shift and go to state 15
    RETURN          shift and go to state 16
    SEMICOLON       shift and go to state 17
    NEWLINE         shift and go to state 18
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    fcall                          shift and go to state 6
    operation                      shift and go to state 29
    expr                           shift and go to state 3
    end                            shift and go to state 4
    assign                         shift and go to state 5
    return                         shift and go to state 7
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    value                          shift and go to state 13
    id                             shift and go to state 14
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 71

    (19) fcall -> id PAREN_OPEN params PAREN_CLOSE .

    ASSIGN          reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    SEMICOLON       reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    NEWLINE         reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    PLUS            reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    MINUS           reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    MUL             reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    DIV             reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    EXPON           reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    QUOTE           reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    FACTOR          reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    ID              reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    PAREN_CLOSE     reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    OR              reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    COMMA           reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)
    ANGLE_CLOSE     reduce using rule 19 (fcall -> id PAREN_OPEN params PAREN_CLOSE .)


state 72

    (22) params -> params COMMA . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 76
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 73

    (16) limit -> LIM ANGLE_OPEN to ANGLE_CLOSE . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    expr                           shift and go to state 77
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    id                             shift and go to state 49
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 74

    (17) to -> id ARROW_RIGHT . expr
    (8) expr -> . limit
    (9) expr -> . derivate
    (10) expr -> . factorial
    (11) expr -> . abs
    (18) expr -> . fcall
    (26) expr -> . expr PLUS expr
    (27) expr -> . expr MINUS expr
    (28) expr -> . expr MUL expr
    (29) expr -> . expr DIV expr
    (30) expr -> . expr EXPON expr
    (31) expr -> . value
    (32) expr -> . expr id
    (33) expr -> . PAREN_OPEN expr PAREN_CLOSE
    (16) limit -> . LIM ANGLE_OPEN to ANGLE_CLOSE expr
    (15) derivate -> . expr QUOTE
    (14) factorial -> . expr FACTOR
    (12) abs -> . OR expr OR
    (19) fcall -> . id PAREN_OPEN params PAREN_CLOSE
    (20) fcall -> . id PAREN_OPEN PAREN_CLOSE
    (34) value -> . MINUS value
    (35) value -> . STRING
    (36) value -> . id
    (37) value -> . bool
    (41) value -> . number
    (42) value -> . float
    (38) id -> . ID
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (43) number -> . INTEGER
    (44) float -> . INTEGER DOT INTEGER

    PAREN_OPEN      shift and go to state 15
    LIM             shift and go to state 19
    OR              shift and go to state 20
    MINUS           shift and go to state 12
    STRING          shift and go to state 21
    ID              shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27
    INTEGER         shift and go to state 28

    id                             shift and go to state 49
    expr                           shift and go to state 78
    limit                          shift and go to state 8
    derivate                       shift and go to state 9
    factorial                      shift and go to state 10
    abs                            shift and go to state 11
    fcall                          shift and go to state 48
    value                          shift and go to state 13
    bool                           shift and go to state 22
    number                         shift and go to state 23
    float                          shift and go to state 24

state 75

    (23) assign -> fcall ASSIGN CURLY_OPEN program CURLY_CLOSE .

    SEMICOLON       reduce using rule 23 (assign -> fcall ASSIGN CURLY_OPEN program CURLY_CLOSE .)
    NEWLINE         reduce using rule 23 (assign -> fcall ASSIGN CURLY_OPEN program CURLY_CLOSE .)


state 76

    (22) params -> params COMMA expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    PAREN_CLOSE     reduce using rule 22 (params -> params COMMA expr .)
    COMMA           reduce using rule 22 (params -> params COMMA expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36

state 77

    (16) limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPON resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for FACTOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    SEMICOLON       reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    NEWLINE         reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    PAREN_CLOSE     reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    OR              reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    COMMA           reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    ANGLE_CLOSE     reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

  ! PLUS            [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! MINUS           [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! MUL             [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! DIV             [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! EXPON           [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! QUOTE           [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! FACTOR          [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]
  ! ID              [ reduce using rule 16 (limit -> LIM ANGLE_OPEN to ANGLE_CLOSE expr .) ]

    id                             shift and go to state 36

state 78

    (17) to -> id ARROW_RIGHT expr .
    (26) expr -> expr . PLUS expr
    (27) expr -> expr . MINUS expr
    (28) expr -> expr . MUL expr
    (29) expr -> expr . DIV expr
    (30) expr -> expr . EXPON expr
    (32) expr -> expr . id
    (15) derivate -> expr . QUOTE
    (14) factorial -> expr . FACTOR
    (38) id -> . ID

    ANGLE_CLOSE     reduce using rule 17 (to -> id ARROW_RIGHT expr .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    MUL             shift and go to state 33
    DIV             shift and go to state 34
    EXPON           shift and go to state 35
    QUOTE           shift and go to state 37
    FACTOR          shift and go to state 38
    ID              shift and go to state 25

    id                             shift and go to state 36
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 6 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MUL in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for EXPON in state 77 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 77 resolved as shift
WARNING: shift/reduce conflict for FACTOR in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
